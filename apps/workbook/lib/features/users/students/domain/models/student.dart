import '../../../profile/domain/models/profile.dart';
import '../../data/models/student_db_data.dart';
import 'student_form_data.dart';

class Student extends Profile {
// ----- CONSTRUCTORS -----
  /// creates an new Student with empty fields: used on student_form_screen
  Student.create({
    required String teacherId,
    List<String>? coursesIds,
  }) : 
    dbData = StudentDbData(
      teacherId: teacherId,
      isActive: true,
      isVerified: false,
      coursesIds: coursesIds ?? [],
    ) {
      formData = StudentFormData(
        dbData: dbData,
      );
    }

  /// Transforms DB data to Student data
  Student.fromDbObject({required this.dbData}) :
    formData = StudentFormData(dbData: dbData);
  
  /// Creates anew course object from pa,ssed values.
  /// Use this constructor to create a copy of another course.
  Student.copy({
    required this.dbData,
    required this.formData,
  });


  @override
  String? get id => dbData.id;

// ----- DB DATA ----
  /// course data from db
  @override
  final StudentDbData dbData;

// ----- FORM DATA -----
  /// form data
  @override
  late final StudentFormData formData;

  /// tmp password generated by the teacher for first login.
  /// Student uses this password to get access to the app when
  /// the teacher invites this student
  String? firstLoginPassword; 


// ----- DB METHODS -----
  /// convert Student to db Json
  @override
  Map<String, dynamic> toJson() =>
    // convert db data to Json
    dbData.toJson()
    // add form values to the map
    ..addAll(formData.toJson());
    

// ----- RELATED RECORDS METHODS -----
  /// check if the student attends a course
  bool containsCourse(String courseId) => dbData.coursesIds.contains(courseId);

// ----- COPY OBJECT METHOD -----
  // returns current Student obj copy as a new Instance of Student
  // used while updating Student to store the old value
  @override
  Student copy({
    String? nameValue, 
    bool? isActive, 
    bool? isVerified,
    String? userId,
    String? photoUrl,
  }) => Student.copy(
    dbData: dbData.copyWith(
      name: nameValue ?? dbData.name,
      isActive: isActive ?? dbData.isActive,
      isVerified: isVerified ?? dbData.isVerified,
      userId: userId ?? dbData.userId,
      photoUrl: photoUrl,
    ),
    formData: formData,
  );
}